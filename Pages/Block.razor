@page "/block"
@using Blockchain.Data
@inject ShaService ShaService

<div class="container">
    <div class="row mb-1">
        <div class="col">
            @foreach (var _block in _blocks)
            {
                <div class="card @((_block.IsGood() ? "bg-success":"bg-danger")) " style="width: 30rem; ">

                    <div class="card-body">
                        <div class="container">

                            <div class="row mb-1">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Block #:</span>
                                    </div>
                                    <input type="number" class="form-control col" @bind-value="_block.BlockNum" @bind-value:event="oninput" />
                                </div>
                            </div>

                            <div class="row mb-1">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Nonce:</span>
                                    </div>
                                    <input type="number" class="form-control col" @bind-value="_block.Nonce" @bind-value:event="oninput" />
                                </div>
                            </div>


                            <div class="row mb-1">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Data:</span>
                                    </div>
                                    <textarea type="text" rows="10" class="form-control col" @bind-value="_block.Data" @bind-value:event="oninput" />
                                </div>

                            </div>

                            <div class="row mb-1">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Sha256:</span>
                                    </div>
                                    <input type="text" class="form-control col" @bind-value="_block.Hash" />
                                </div>
                            </div>

                            <div class="row">
                                <button class="btn btn-primary form-control" @onclick="_block.Mine">Mine</button>
                            </div>
                        </div>
                    </div>
                </div>




            }
        </div>
        <div class="col">
            <iframe src="https://giphy.com/embed/XjXtEuBHulPcQ" width="480" height="270" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p></p>
        </div>

    </div>
</div>


<p></p>
<span>
    <b>Proof-of-Work</b> (PoW – дословно: доказательство работы), —
    алгоритм защиты распределенных систем от злоупотреблений (DoS-атак, спам-рассылок и т.д.), суть которого сводится к двум основным пунктам:
</span>
<p></p>
<p><b>1. </b> необходимости выполнения определенной достаточно сложной и длительной задачи;</p>
<p><b>2. </b> возможности быстро и легко проверить результат. </p>


@functions
{

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _blocks = new List<MainingBlock> { new MainingBlock(null) { BlockNum = 1 } };
    }

    private List<MainingBlock> _blocks { get; set; }

    private void AddBlock()
    {
        _blocks.Add(new MainingBlock(_blocks.LastOrDefault()) { BlockNum = _blocks.Count });
    }

}
